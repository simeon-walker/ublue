# image will be published to ghcr.io/<user>/<name>
name: silverblue-docker
# description will be included in the image's metadata
description: A uBlue Silverblue build with Docker instead of Podman

# the base image to build on top of (FROM) and the version tag to use
base-image: ghcr.io/ublue-os/silverblue-main
image-version: 38 # latest is also supported if you want new updates ASAP

# module configuration, executed in order
# you can include multiple instances of the same module
modules:
  - type: files
    files:
      - usr: /usr # copy static configurations
                  #
                  # copies config/files/usr into your image's /usr
                  #
                  # configuration you wish to end up in /etc/ on the booted system
                  # should be added into /usr/etc/ as that is the proper "distro"
                  # config directory on ostree. Read more in the files module's README

  - type: rpm-ostree
    repos:
      # - https://copr.fedorainfracloud.org/coprs/atim/starship/repo/fedora-%OS_VERSION%/atim-starship-fedora-%OS_VERSION%.repo
      - https://packages.microsoft.com/yumrepos/vscode/config.repo
      - https://download.docker.com/linux/fedora/docker-ce.repo
    install:
      - distrobox
      - gnome-tweaks
      - vim
      - code
      - docker-ce
      - gstreamer1-vaapi
      - gstreamer1-plugin-openh264
    remove:
      - toolbox
      - podman
      - podman-plugins
      - podman-compose

  - type: bling # configure what to pull in from ublue-os/bling
    install:
      - justfiles # add "!include /usr/share/ublue-os/just/bling.just"
                  # in your custom.just (added by default) or local justfile

  - type: fonts
    fonts:
      nerd-fonts:
        - Hack
      google-fonts:
        - Roboto
        - Open Sans

  - type: yafti # if included, yafti and it's dependencies (pip & libadwaita)
                #  will be installed and set up
    custom-flatpaks: # this section is optional
      # - Celluloid: io.github.celluloid_player.Celluloid
      # - Krita: org.kde.krita

  - type: script
    scripts:
      # this sets up the proper policy & signing files for signed images to work
      - signing.sh
